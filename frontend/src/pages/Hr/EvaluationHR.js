import React, { useState, useEffect } from "react";
import axios from "axios";
import { FaUserCheck, FaChartBar, FaSearch, FaArrowLeft, FaSave } from "react-icons/fa";
import { useNavigate } from "react-router-dom";

function EvaluationHR() {
  const [search, setSearch] = useState("");
  const [employees, setEmployees] = useState([]);
  const [selectedEmp, setSelectedEmp] = useState(null);
  const [evaluations, setEvaluations] = useState([]);
  const [loading, setLoading] = useState(false);

  // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤
  useEffect(() => {
    const fetchEmployees = async () => {
      try {
        const token = localStorage.getItem("token"); // ‚úÖ ‡∏î‡∏∂‡∏á token ‡∏à‡∏≤‡∏Å localStorage
        const res = await axios.get("http://localhost:3000/api/employees", {
          headers: { Authorization: `Bearer ${token}` }, // ‚úÖ ‡πÅ‡∏ô‡∏ö token
        });
        setEmployees(res.data);
      } catch (err) {
        console.error("‚ùå Error fetching employees:", err);
        alert("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ (‡∏≠‡∏≤‡∏à‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö)");
      }
    };
    fetchEmployees();
  }, []);

  // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô
  useEffect(() => {
    if (!selectedEmp) return; // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô ‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≤‡∏°
    const fetchEvaluations = async () => {
      setLoading(true);
      try {
        const res = await axios.get(
          `http://localhost:3000/api/evaluation/${selectedEmp}`
        );
        console.log("üì¶ Evaluation data:", res.data);
        setEvaluations(res.data);
      } catch (err) {
        console.error("‚ùå Error fetching evaluation:", err);
        alert("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡πÑ‡∏î‡πâ");
      } finally {
        setLoading(false);
      }
    };
    fetchEvaluations();
  }, [selectedEmp]);

  const navigate = useNavigate();
  const goToReport = async () => {
    setLoading(true);
    try {
      const token = localStorage.getItem("token");

      // üîπ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô (‡πÅ‡∏Å‡πâ URL ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì)
      const res = await axios.get("http://localhost:3000/api/ReportSummary", {
        headers: { Authorization: `Bearer ${token}` },
      });

      // ‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô
      navigate("/ReportSummary");
    } catch (err) {
      console.error("‚ùå Error fetching report summary:", err);
      alert("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ (‡∏≠‡∏≤‡∏à‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö)");
    } finally {
      setLoading(false);
    }
  };


  // ‚úÖ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô
  const handleEvaluate = async (employee_code) => {
    setLoading(true);
    try {
      const token = localStorage.getItem("token"); // üîπ ‡∏î‡∏∂‡∏á token ‡∏à‡∏≤‡∏Å localStorage
      const res = await axios.get(
        `http://localhost:3000/api/evaluation/${employee_code}`,
        {
          headers: { Authorization: `Bearer ${token}` }, // üîπ ‡πÅ‡∏ô‡∏ö token
        }
      );
      setSelectedEmp(employee_code);
      setEvaluations(res.data);
    } catch (err) {
      console.error("‚ùå Error fetching evaluation:", err);
      alert("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡πÑ‡∏î‡πâ (‡∏≠‡∏≤‡∏à‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö)");
    } finally {
      setLoading(false);
    }
  };

  // ‚úÖ ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô
  const handleBack = () => {
    setSelectedEmp(null);
    setEvaluations([]);
  };

  // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•
  const handleSave = async () => {
    try {
      const token = localStorage.getItem("token");
      await axios.put(
        `http://localhost:3000/api/evaluation/${selectedEmp}`,
        { evaluations },
        {
          headers: { Authorization: `Bearer ${token}` },
        }
      );
      alert("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!");
    } catch (err) {
      console.error("‚ùå Error saving evaluation:", err);
      alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å (‡∏≠‡∏≤‡∏à‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö)");
    }
  };

  // ‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
  const handleScoreChange = (index, newScore) => {
    const updated = [...evaluations];
    updated[index].score = newScore;
    setEvaluations(updated);
  };

  // ‚úÖ ‡∏ü‡∏¥‡∏•‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ä‡∏∑‡πà‡∏≠
  const filtered = employees.filter((e) =>
    `${e.first_name} ${e.last_name}`.toLowerCase().includes(search.toLowerCase())
  );

  // --------------------------- üîπ Loading
  if (loading)
    return (
      <div className="text-center mt-5">
        <div className="spinner-border text-primary" role="status"></div>
        <p className="mt-3">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</p>
      </div>
    );

  // --------------------------- üîπ ‡∏´‡∏ô‡πâ‡∏≤‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô
  if (selectedEmp) {
    return (
      <div className="container mt-4" style={{ fontFamily: "'Kanit', sans-serif" }}>
        <button className="btn btn-outline-secondary mb-3" onClick={handleBack}>
          <FaArrowLeft className="me-2" /> ‡∏Å‡∏•‡∏±‡∏ö
        </button>

        <h4 className="fw-bold text-primary mb-4">
          üßæ ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô {selectedEmp}
        </h4>

        <div className="card shadow-sm border-0 rounded-4">
          <div className="card-body">
            <table className="table align-middle">
              <thead style={{ backgroundColor: "#f1f5f9" }}>
                <tr>
                  <th>‡∏´‡∏°‡∏ß‡∏î‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô</th>
                  <th>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</th>
                  <th>‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô</th>
                </tr>
              </thead>
              <tbody>
                {evaluations.map((ev, index) => (
                  <tr key={ev.id || index}>
                    <td>{ev.category}</td>
                    <td>{ev.description}</td>
                    <td>
                      <input
                        type="number"
                        min="0"
                        max="20"
                        value={ev.score}
                        className="form-control"
                        style={{ width: "100px" }}
                        onChange={(e) =>
                          handleScoreChange(index, parseInt(e.target.value) || 0)
                        }
                      />
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>

            <div className="text-end">
              <button className="btn btn-primary" onClick={handleSave}>
                <FaSave className="me-2" /> ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô
              </button>
            </div>
          </div>
        </div>
      </div>
    );
  }

  // --------------------------- üîπ ‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô
  return (
    <div className="container-fluid" style={{ fontFamily: "'Kanit', sans-serif" }}>
      <h4 className="fw-bold mb-4 d-flex align-items-center">
        <FaUserCheck className="me-2 text-primary" /> ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô
      </h4>

      {/* ‡∏ä‡πà‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ */}
      <div className="d-flex justify-content-between align-items-center mb-3">
        <div className="d-flex align-items-center">
          <FaSearch className="text-secondary me-2" />
          <input
            type="text"
            placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô..."
            className="form-control"
            style={{ width: "250px", borderRadius: "10px" }}
            value={search}
            onChange={(e) => setSearch(e.target.value)}
          />
        </div>

        <button className="btn btn-outline-primary" onClick={goToReport}>
          <FaChartBar className="me-2" /> ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ú‡∏•‡∏£‡∏ß‡∏°
            
        </button>
      </div>

      {/* ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô */}
      <div className="card shadow-sm border-0 rounded-4">
        <div className="card-body">
          <table className="table table-hover align-middle">
            <thead style={{ backgroundColor: "#f1f5f9", color: "#0b1e39" }}>
              <tr>
                <th>‡∏£‡∏´‡∏±‡∏™‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô</th>
                <th>‡∏ä‡∏∑‡πà‡∏≠‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô</th>
                <th>‡πÅ‡∏ú‡∏ô‡∏Å</th>
                <th>‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á</th>
                <th className="text-center">‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
              </tr>
            </thead>
            <tbody>
              {filtered.map((emp) => (
                <tr key={emp.employee_code}>
                  <td>{emp.employee_code}</td>
                  <td>{emp.first_name + " " + emp.last_name}</td>
                  <td>{emp.department}</td>
                  <td>{emp.position}</td>
                  <td className="text-center">
                    <button
                      className="btn btn-primary btn-sm"
                      onClick={() => handleEvaluate(emp.employee_code)}
                    >
                      üìù ‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô
                    </button>
                  </td>
                </tr>
              ))}

              {filtered.length === 0 && (
                <tr>
                  <td colSpan="5" className="text-center text-secondary py-3">
                    ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô
                  </td>
                </tr>
              )}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  );
}

export default EvaluationHR;
