import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import mysql.connector
import io, base64
from jinja2 import Template
from datetime import datetime

# ---------- ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ----------
conn = mysql.connector.connect(
    host="localhost",
    user="root",
    password="root",
    database="hrms"
)

# ---------- ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å ----------
df_emp = pd.read_sql("SELECT * FROM employees", conn)
df_pay = pd.read_sql("SELECT * FROM payroll", conn)
df_perf = pd.read_sql("SELECT * FROM performance_reviews", conn)
conn.close()

# ---------- ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ----------
# 1) ‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÅ‡∏ú‡∏ô‡∏Å
dept_counts = df_emp['department'].value_counts()

# 2) ‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏û‡∏®
gender_counts = df_emp['gender'].value_counts()

# 3) ‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ï‡πà‡∏≠‡πÅ‡∏ú‡∏ô‡∏Å
avg_salary = df_pay.merge(df_emp[['employee_code','department']], on='employee_code')
avg_salary = avg_salary.groupby('department')['total_salary'].mean().sort_values(ascending=False)

# 4) ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢ (‡∏à‡∏≤‡∏Å work_info ‡πÉ‡∏ô DB)
# (‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏à‡∏£‡∏¥‡∏á ‡πÉ‡∏´‡πâ query ‡∏à‡∏≤‡∏Å work_info)
# ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡πÄ‡∏£‡∏≤‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≤‡∏Å hire_date
df_emp['years_exp'] = (pd.Timestamp.now() - pd.to_datetime(df_emp['hire_date'])).dt.days / 365
exp_avg = df_emp.groupby('department')['years_exp'].mean().round(1)

# 5) ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ï‡πà‡∏≠‡πÅ‡∏ú‡∏ô‡∏Å
df_perf = df_perf.merge(df_emp[['employee_code','department']], on='employee_code')
perf_avg = df_perf.groupby('department')['score'].mean().sort_values(ascending=False)

# 6) ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏ï‡πà‡∏≠‡πÅ‡∏ú‡∏ô‡∏Å
total_pay = avg_salary * dept_counts  # (‡πÇ‡∏î‡∏¢‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì)

# ---------- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏£‡∏≤‡∏ü ----------
sns.set(style="whitegrid", font="Tahoma")

def plot_to_base64(fig):
    buf = io.BytesIO()
    fig.savefig(buf, format="png", bbox_inches="tight")
    plt.close(fig)
    buf.seek(0)
    return base64.b64encode(buf.getvalue()).decode("utf-8")

# ‡∏Å‡∏£‡∏≤‡∏ü 1: ‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ï‡πà‡∏≠‡πÅ‡∏ú‡∏ô‡∏Å
fig1, ax1 = plt.subplots(figsize=(8,4))
dept_counts.plot(kind='bar', ax=ax1, color='skyblue')
ax1.set_title("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÅ‡∏ú‡∏ô‡∏Å")
ax1.set_ylabel("‡∏Ñ‡∏ô")
img1 = plot_to_base64(fig1)

# ‡∏Å‡∏£‡∏≤‡∏ü 2: ‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏û‡∏®
fig2, ax2 = plt.subplots(figsize=(4,4))
ax2.pie(gender_counts, labels=gender_counts.index, autopct="%.1f%%", colors=sns.color_palette("pastel"))
ax2.set_title("‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏û‡∏®‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô")
img2 = plot_to_base64(fig2)

# ‡∏Å‡∏£‡∏≤‡∏ü 3: ‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ï‡πà‡∏≠‡πÅ‡∏ú‡∏ô‡∏Å
fig3, ax3 = plt.subplots(figsize=(8,4))
avg_salary.plot(kind='barh', ax=ax3, color='lightgreen')
ax3.set_title("‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ï‡πà‡∏≠‡πÅ‡∏ú‡∏ô‡∏Å (‡∏ö‡∏≤‡∏ó)")
img3 = plot_to_base64(fig3)

# ‡∏Å‡∏£‡∏≤‡∏ü 4: ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏ú‡∏•‡∏á‡∏≤‡∏ô
fig4, ax4 = plt.subplots(figsize=(8,4))
perf_avg.plot(kind='barh', ax=ax4, color='salmon')
ax4.set_title("‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ï‡πà‡∏≠‡πÅ‡∏ú‡∏ô‡∏Å")
img4 = plot_to_base64(fig4)

# ---------- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô HTML ----------
html_template = """
<html>
<head>
<meta charset="utf-8">
<title>HR Analytics Dashboard</title>
<style>
body { font-family: Tahoma, sans-serif; margin: 30px; color: #222; }
h1 { color: #1565c0; }
img { max-width: 100%; border: 1px solid #eee; margin-bottom: 30px; }
section { margin-bottom: 40px; }
</style>
</head>
<body>
<h1>HR Analytics Dashboard</h1>
<p>‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠: {{ date }}</p>

<section>
<h2>üë©‚Äçüíº ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÅ‡∏ú‡∏ô‡∏Å</h2>
<img src="data:image/png;base64,{{ img1 }}">
</section>

<section>
<h2>‚öñÔ∏è ‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏û‡∏®‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô</h2>
<img src="data:image/png;base64,{{ img2 }}">
</section>

<section>
<h2>üí∏ ‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ï‡πà‡∏≠‡πÅ‡∏ú‡∏ô‡∏Å</h2>
<img src="data:image/png;base64,{{ img3 }}">
</section>

<section>
<h2>‚≠ê ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ï‡πà‡∏≠‡πÅ‡∏ú‡∏ô‡∏Å</h2>
<img src="data:image/png;base64,{{ img4 }}">
</section>

<footer>
<p>‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• HRMS</p>
</footer>
</body>
</html>
"""

tpl = Template(html_template)
html = tpl.render(
    date=datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
    img1=img1, img2=img2, img3=img3, img4=img4
)

with open("hr_report.html", "w", encoding="utf-8") as f:
    f.write(html)

print("‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß: hr_report.html")
